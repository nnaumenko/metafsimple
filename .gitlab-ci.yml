build-clang:
  stage: build
  image: ubuntu:18.04
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  script:
  - apt-get update
  - apt-get -y --no-install-recommends install wget gnupg2 ca-certificates
  - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add - 
  - apt-get update
  - apt-get -y --no-install-recommends install clang-8 lld-8 llvm make
  - clang++-8 --version
  - mkdir /opt/cmake
  - pushd /opt/cmake
  - wget https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3-Linux-x86_64.tar.gz
  - tar -xvzf cmake-3.15.3-Linux-x86_64.tar.gz
  - popd
  - ln -s /opt/cmake/cmake-3.15.3-Linux-x86_64/bin/cmake /usr/local/bin/cmake
  - whereis clang-8
  - export CC="clang-8"
  - whereis clang++-8
  - export CXX="clang++-8"
  - cmake .
  - make
  - mkdir -p ci-build/test
  - mv bin/test ci-build/test/test-clang
  - mkdir -p ci-build/coverage
  - mv bin/testcoverage ci-build/coverage/coverage-clang
  artifacts:
    paths:
      - ci-build

build-gcc:
  stage: build
  image: ubuntu:18.04
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  script:
  - apt-get update
  - apt-get -y --no-install-recommends install build-essential wget make ca-certificates
  - gcc --version
  - wget https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3-Linux-x86_64.sh
  - mkdir /opt/cmake
  - pushd /opt/cmake
  - wget https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3-Linux-x86_64.tar.gz
  - tar -xvzf cmake-3.15.3-Linux-x86_64.tar.gz
  - popd
  - ln -s /opt/cmake/cmake-3.15.3-Linux-x86_64/bin/cmake /usr/local/bin/cmake
  - export CXX="g++"
  - cmake .
  - make
  - mkdir -p ci-build/test
  - mv bin/test ci-build/test/test-gcc
  artifacts:
    paths:
      - ci-build

tests-clang:
  stage: test
  image: ubuntu:18.04
  script:
    - ci-build/test/test-clang
  dependencies:
    - build-clang

tests-gcc:
  stage: test
  image: ubuntu:18.04
  script:
    - ci-build/test/test-gcc
  dependencies:
    - build-gcc

coverage:
  stage: deploy
  image: ubuntu:18.04
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  script:
    - apt-get update
    - apt-get -y --no-install-recommends install llvm-9 wget curl git ca-certificates
    - ci-build/coverage/coverage-clang
    - /usr/lib/llvm-9/bin/llvm-profdata merge -sparse default.profraw -o default.profdata
    - /usr/lib/llvm-9/bin/llvm-profdata show -all-functions -counts -ic-targets default.profdata > profile.txt
    - /usr/lib/llvm-9/bin/llvm-cov show ci-build/coverage/coverage-clang -instr-profile=default.profdata > coverage.txt
    - mkdir ci-profile-coverage
    - cp {default.*,profile.txt,coverage.txt} ci-profile-coverage
    - wget -O codecov.sh https://codecov.io/bash
    - chmod +x codecov.sh
    - ./codecov.sh
  artifacts:
    paths:
      - ci-profile-coverage
  dependencies:
    - build-clang